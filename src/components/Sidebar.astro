---
import { getCollection, getEntry } from 'astro:content';
import { getFormattedStars } from '../lib/github';
import { getAllGuides } from '../lib/guide';
import type { GuideType } from '../layouts/DocsLayout.astro';

export interface Props {
  activePath?: string;
  activeGuideTitle: string;
  groupedGuides: Record<string, GuideType[]>;
}

const { activePath, groupedGuides, activeGuideTitle } = Astro.props;
---

<div
  id='docs-sidebar'
  class='hidden min-h-screen w-[200px] flex-shrink-0 border-r border-gray-200 text-right md:block lg:w-[350px]'
>
  <div class='relative top-0 sh:sticky'>
    <div class='flex justify-end px-5 pb-5 pt-10'>
      <a href='/' class='mb-2 block items-center justify-end'>
        <img src='/brand/icon.svg' alt='mly.fyi logo' class='h-16 w-16' />
      </a>
    </div>

    {
      Object.keys(groupedGuides).map((groupTitle) => {
        const guides = groupedGuides[groupTitle];

        return (
          <>
            <h2 class='relative mb-2 pr-5 text-xl font-bold'>{groupTitle}</h2>
            <ul class='mb-5 text-gray-400'>
              {guides.map((guide) => {
                const guidePath = `/docs/${guide.slug}`;
                return (
                  <li class='mb-2'>
                    <a
                      href={guidePath}
                      class:list={[
                        'py-2 pr-5 hover:text-black',
                        { 'text-black': activeGuideTitle === guide.data.title },
                      ]}
                    >
                      {guide.data.title}
                    </a>
                  </li>
                );
              })}
            </ul>
          </>
        );
      })
    }
  </div>
</div>
